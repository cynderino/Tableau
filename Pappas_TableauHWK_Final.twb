<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20183.19.0123.2221                               -->
<workbook original-version='18.1' source-build='2018.3.3 (20183.19.0123.2221)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Q1 2018 citi bike' inline='true' name='federated.0b9ptbm1ix6wuw14wg5d215twlru' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Q1 2018 citi bike' name='textscan.1djkjib14u2hd21fzz13g0w3d2ul'>
            <connection class='textscan' directory='C:/Users/cynne/Documents/Data Bootcamp Files/Tableau Homework/Pappas_TableauHWK/Resources' filename='Q1 2018 citi bike .csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1djkjib14u2hd21fzz13g0w3d2ul' name='Q1 2018 citi bike .csv' table='[Q1 2018 citi bike #csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='date' name='Date' ordinal='0' />
            <column datatype='integer' name='Trips over the past 24-hours (midnight to 11:59pm)' ordinal='1' />
            <column datatype='integer' name='Miles traveled today (midnight to 11:59 pm)' ordinal='2' />
            <column datatype='integer' name='Total Annual Members (All Time)' ordinal='3' />
            <column datatype='integer' name='24-Hour Passes Purchased (midnight to 11:59 pm)' ordinal='4' />
            <column datatype='integer' name='3-Day Passes Purchased (midnight to 11:59 pm)' ordinal='5' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Q1 2018 citi bike .csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[Q1 2018 citi bike .csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Trips over the past 24-hours (midnight to 11:59pm)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Trips over the past 24-hours (midnight to 11:59pm)]</local-name>
            <parent-name>[Q1 2018 citi bike .csv]</parent-name>
            <remote-alias>Trips over the past 24-hours (midnight to 11:59pm)</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Miles traveled today (midnight to 11:59 pm)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Miles traveled today (midnight to 11:59 pm)]</local-name>
            <parent-name>[Q1 2018 citi bike .csv]</parent-name>
            <remote-alias>Miles traveled today (midnight to 11:59 pm)</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Annual Members (All Time)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total Annual Members (All Time)]</local-name>
            <parent-name>[Q1 2018 citi bike .csv]</parent-name>
            <remote-alias>Total Annual Members (All Time)</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>24-Hour Passes Purchased (midnight to 11:59 pm)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[24-Hour Passes Purchased (midnight to 11:59 pm)]</local-name>
            <parent-name>[Q1 2018 citi bike .csv]</parent-name>
            <remote-alias>24-Hour Passes Purchased (midnight to 11:59 pm)</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>3-Day Passes Purchased (midnight to 11:59 pm)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[3-Day Passes Purchased (midnight to 11:59 pm)]</local-name>
            <parent-name>[Q1 2018 citi bike .csv]</parent-name>
            <remote-alias>3-Day Passes Purchased (midnight to 11:59 pm)</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.0b9ptbm1ix6wuw14wg5d215twlru].[sum:Miles traveled today (midnight to 11:59 pm):qk]&quot;' value='Miles' />
          <alias key='&quot;[federated.0b9ptbm1ix6wuw14wg5d215twlru].[sum:Trips over the past 24-hours (midnight to 11:59pm):qk]&quot;' value='Trips' />
        </aliases>
      </column>
      <column datatype='integer' name='[Miles traveled today (midnight to 11:59 pm)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Trips over the past 24-hours (midnight to 11:59pm)]' role='measure' type='quantitative' />
      <column-instance column='[Miles traveled today (midnight to 11:59 pm)]' derivation='Sum' name='[sum:Miles traveled today (midnight to 11:59 pm):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Trips over the past 24-hours (midnight to 11:59pm)]' derivation='Sum' name='[sum:Trips over the past 24-hours (midnight to 11:59pm):qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.360743' measure-ordering='alphabetic' measure-percentage='0.639257' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Q2 2018 citi bike' inline='true' name='federated.0dxgbzj0vv8ah712lq3820nkewdg' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Q2 2018 citi bike' name='textscan.0t5nptz02p8sya1gadi6p1iswbry'>
            <connection class='textscan' directory='C:/Users/cynne/Documents/Data Bootcamp Files/Tableau Homework/Pappas_TableauHWK/Resources' filename='Q2 2018 citi bike.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0t5nptz02p8sya1gadi6p1iswbry' name='Q2 2018 citi bike.csv' table='[Q2 2018 citi bike#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='date' name='Date' ordinal='0' />
            <column datatype='integer' name='Trips over the past 24-hours (midnight to 11:59pm)' ordinal='1' />
            <column datatype='integer' name='Miles traveled today (midnight to 11:59 pm)' ordinal='2' />
            <column datatype='integer' name='Total Annual Members (All Time)' ordinal='3' />
            <column datatype='integer' name='24-Hour Passes Purchased (midnight to 11:59 pm)' ordinal='4' />
            <column datatype='integer' name='3-Day Passes Purchased (midnight to 11:59 pm)' ordinal='5' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Q2 2018 citi bike.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[Q2 2018 citi bike.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Trips over the past 24-hours (midnight to 11:59pm)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Trips over the past 24-hours (midnight to 11:59pm)]</local-name>
            <parent-name>[Q2 2018 citi bike.csv]</parent-name>
            <remote-alias>Trips over the past 24-hours (midnight to 11:59pm)</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Miles traveled today (midnight to 11:59 pm)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Miles traveled today (midnight to 11:59 pm)]</local-name>
            <parent-name>[Q2 2018 citi bike.csv]</parent-name>
            <remote-alias>Miles traveled today (midnight to 11:59 pm)</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Annual Members (All Time)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total Annual Members (All Time)]</local-name>
            <parent-name>[Q2 2018 citi bike.csv]</parent-name>
            <remote-alias>Total Annual Members (All Time)</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>24-Hour Passes Purchased (midnight to 11:59 pm)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[24-Hour Passes Purchased (midnight to 11:59 pm)]</local-name>
            <parent-name>[Q2 2018 citi bike.csv]</parent-name>
            <remote-alias>24-Hour Passes Purchased (midnight to 11:59 pm)</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>3-Day Passes Purchased (midnight to 11:59 pm)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[3-Day Passes Purchased (midnight to 11:59 pm)]</local-name>
            <parent-name>[Q2 2018 citi bike.csv]</parent-name>
            <remote-alias>3-Day Passes Purchased (midnight to 11:59 pm)</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.0dxgbzj0vv8ah712lq3820nkewdg].[sum:Miles traveled today (midnight to 11:59 pm):qk]&quot;' value='Miles' />
          <alias key='&quot;[federated.0dxgbzj0vv8ah712lq3820nkewdg].[sum:Trips over the past 24-hours (midnight to 11:59pm):qk]&quot;' value='Trips' />
        </aliases>
      </column>
      <column datatype='integer' name='[Miles traveled today (midnight to 11:59 pm)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Trips over the past 24-hours (midnight to 11:59pm)]' role='measure' type='quantitative' />
      <column-instance column='[Miles traveled today (midnight to 11:59 pm)]' derivation='Sum' name='[sum:Miles traveled today (midnight to 11:59 pm):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Trips over the past 24-hours (midnight to 11:59pm)]' derivation='Sum' name='[sum:Trips over the past 24-hours (midnight to 11:59pm):qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.369347' measure-ordering='alphabetic' measure-percentage='0.630653' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Q3 2018 citi bike' inline='true' name='federated.1qhyeqr1oz86x31ca8kzt019m5r8' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Q3 2018 citi bike' name='textscan.15c0xa71h6amu71cmyhj00lc9xjk'>
            <connection class='textscan' directory='C:/Users/cynne/Documents/Data Bootcamp Files/Tableau Homework/Pappas_TableauHWK/Resources' filename='Q3 2018 citi bike.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.15c0xa71h6amu71cmyhj00lc9xjk' name='Q3 2018 citi bike.csv' table='[Q3 2018 citi bike#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='date' name='Date' ordinal='0' />
            <column datatype='integer' name='Trips over the past 24-hours (midnight to 11:59pm)' ordinal='1' />
            <column datatype='integer' name='Miles traveled today (midnight to 11:59 pm)' ordinal='2' />
            <column datatype='integer' name='Total Annual Members (All Time)' ordinal='3' />
            <column datatype='integer' name='24-Hour Passes Purchased (midnight to 11:59 pm)' ordinal='4' />
            <column datatype='integer' name='3-Day Passes Purchased (midnight to 11:59 pm)' ordinal='5' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Q3 2018 citi bike.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[Q3 2018 citi bike.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Trips over the past 24-hours (midnight to 11:59pm)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Trips over the past 24-hours (midnight to 11:59pm)]</local-name>
            <parent-name>[Q3 2018 citi bike.csv]</parent-name>
            <remote-alias>Trips over the past 24-hours (midnight to 11:59pm)</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Miles traveled today (midnight to 11:59 pm)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Miles traveled today (midnight to 11:59 pm)]</local-name>
            <parent-name>[Q3 2018 citi bike.csv]</parent-name>
            <remote-alias>Miles traveled today (midnight to 11:59 pm)</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Annual Members (All Time)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total Annual Members (All Time)]</local-name>
            <parent-name>[Q3 2018 citi bike.csv]</parent-name>
            <remote-alias>Total Annual Members (All Time)</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>24-Hour Passes Purchased (midnight to 11:59 pm)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[24-Hour Passes Purchased (midnight to 11:59 pm)]</local-name>
            <parent-name>[Q3 2018 citi bike.csv]</parent-name>
            <remote-alias>24-Hour Passes Purchased (midnight to 11:59 pm)</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>3-Day Passes Purchased (midnight to 11:59 pm)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[3-Day Passes Purchased (midnight to 11:59 pm)]</local-name>
            <parent-name>[Q3 2018 citi bike.csv]</parent-name>
            <remote-alias>3-Day Passes Purchased (midnight to 11:59 pm)</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.1qhyeqr1oz86x31ca8kzt019m5r8].[sum:Miles traveled today (midnight to 11:59 pm):qk]&quot;' value='Miles' />
          <alias key='&quot;[federated.1qhyeqr1oz86x31ca8kzt019m5r8].[sum:Trips over the past 24-hours (midnight to 11:59pm):qk]&quot;' value='Trips' />
        </aliases>
      </column>
      <column datatype='integer' name='[Miles traveled today (midnight to 11:59 pm)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Trips over the past 24-hours (midnight to 11:59pm)]' role='measure' type='quantitative' />
      <column-instance column='[Miles traveled today (midnight to 11:59 pm)]' derivation='Sum' name='[sum:Miles traveled today (midnight to 11:59 pm):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Trips over the past 24-hours (midnight to 11:59pm)]' derivation='Sum' name='[sum:Trips over the past 24-hours (midnight to 11:59pm):qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.369347' measure-ordering='alphabetic' measure-percentage='0.630653' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Q4 2018 citi bike' inline='true' name='federated.13zxtdw0omicz411eoej61nvt29x' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Q4 2018 citi bike' name='textscan.0jz0kte0fhthvw17z5o2f1gm2vej'>
            <connection class='textscan' directory='C:/Users/cynne/Documents/Data Bootcamp Files/Tableau Homework/Pappas_TableauHWK/Resources' filename='Q4 2018 citi bike.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0jz0kte0fhthvw17z5o2f1gm2vej' name='Q4 2018 citi bike.csv' table='[Q4 2018 citi bike#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='date' name='Date' ordinal='0' />
            <column datatype='integer' name='Trips over the past 24-hours (midnight to 11:59pm)' ordinal='1' />
            <column datatype='integer' name='Miles traveled today (midnight to 11:59 pm)' ordinal='2' />
            <column datatype='integer' name='Total Annual Members (All Time)' ordinal='3' />
            <column datatype='integer' name='24-Hour Passes Purchased (midnight to 11:59 pm)' ordinal='4' />
            <column datatype='integer' name='3-Day Passes Purchased (midnight to 11:59 pm)' ordinal='5' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Q4 2018 citi bike.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[Q4 2018 citi bike.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Trips over the past 24-hours (midnight to 11:59pm)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Trips over the past 24-hours (midnight to 11:59pm)]</local-name>
            <parent-name>[Q4 2018 citi bike.csv]</parent-name>
            <remote-alias>Trips over the past 24-hours (midnight to 11:59pm)</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Miles traveled today (midnight to 11:59 pm)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Miles traveled today (midnight to 11:59 pm)]</local-name>
            <parent-name>[Q4 2018 citi bike.csv]</parent-name>
            <remote-alias>Miles traveled today (midnight to 11:59 pm)</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Annual Members (All Time)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total Annual Members (All Time)]</local-name>
            <parent-name>[Q4 2018 citi bike.csv]</parent-name>
            <remote-alias>Total Annual Members (All Time)</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>24-Hour Passes Purchased (midnight to 11:59 pm)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[24-Hour Passes Purchased (midnight to 11:59 pm)]</local-name>
            <parent-name>[Q4 2018 citi bike.csv]</parent-name>
            <remote-alias>24-Hour Passes Purchased (midnight to 11:59 pm)</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>3-Day Passes Purchased (midnight to 11:59 pm)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[3-Day Passes Purchased (midnight to 11:59 pm)]</local-name>
            <parent-name>[Q4 2018 citi bike.csv]</parent-name>
            <remote-alias>3-Day Passes Purchased (midnight to 11:59 pm)</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.13zxtdw0omicz411eoej61nvt29x].[sum:Miles traveled today (midnight to 11:59 pm):qk]&quot;' value='Miles' />
          <alias key='&quot;[federated.13zxtdw0omicz411eoej61nvt29x].[sum:Trips over the past 24-hours (midnight to 11:59pm):qk]&quot;' value='Trips' />
        </aliases>
      </column>
      <column datatype='integer' name='[Miles traveled today (midnight to 11:59 pm)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Trips over the past 24-hours (midnight to 11:59pm)]' role='measure' type='quantitative' />
      <column-instance column='[Miles traveled today (midnight to 11:59 pm)]' derivation='Sum' name='[sum:Miles traveled today (midnight to 11:59 pm):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Trips over the past 24-hours (midnight to 11:59pm)]' derivation='Sum' name='[sum:Trips over the past 24-hours (midnight to 11:59pm):qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.369347' measure-ordering='alphabetic' measure-percentage='0.630653' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='bikes_all2018' inline='true' name='federated.08k27nw1r9imjy1chuwy20hcrdyr' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='bikes_all2018' name='textscan.15r3cug1lteqw21e2sl6u0zyhgkd'>
            <connection class='textscan' directory='C:/Users/cynne/Documents/Data Bootcamp Files/Tableau Homework/Pappas_TableauHWK/Output' filename='bikes_all2018.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.15r3cug1lteqw21e2sl6u0zyhgkd' name='bikes_all2018.csv' table='[bikes_all2018#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='integer' name='trip_id' ordinal='1' />
            <column datatype='datetime' name='starttime' ordinal='2' />
            <column datatype='datetime' name='stoptime' ordinal='3' />
            <column datatype='integer' name='tripduration' ordinal='4' />
            <column datatype='integer' name='birth year' ordinal='5' />
            <column datatype='integer' name='gender' ordinal='6' />
            <column datatype='integer' name='bikeid' ordinal='7' />
            <column datatype='string' name='usertype' ordinal='8' />
            <column datatype='integer' name='start station id' ordinal='9' />
            <column datatype='string' name='start station name' ordinal='10' />
            <column datatype='real' name='start station latitude' ordinal='11' />
            <column datatype='real' name='start station longitude' ordinal='12' />
            <column datatype='integer' name='end station id' ordinal='13' />
            <column datatype='string' name='end station name' ordinal='14' />
            <column datatype='real' name='end station latitude' ordinal='15' />
            <column datatype='real' name='end station longitude' ordinal='16' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[bikes_all2018.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[bikes_all2018.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>trip_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[trip_id]</local-name>
            <parent-name>[bikes_all2018.csv]</parent-name>
            <remote-alias>trip_id</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>starttime</remote-name>
            <remote-type>135</remote-type>
            <local-name>[starttime]</local-name>
            <parent-name>[bikes_all2018.csv]</parent-name>
            <remote-alias>starttime</remote-alias>
            <ordinal>2</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stoptime</remote-name>
            <remote-type>135</remote-type>
            <local-name>[stoptime]</local-name>
            <parent-name>[bikes_all2018.csv]</parent-name>
            <remote-alias>stoptime</remote-alias>
            <ordinal>3</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tripduration</remote-name>
            <remote-type>20</remote-type>
            <local-name>[tripduration]</local-name>
            <parent-name>[bikes_all2018.csv]</parent-name>
            <remote-alias>tripduration</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>birth year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[birth year]</local-name>
            <parent-name>[bikes_all2018.csv]</parent-name>
            <remote-alias>birth year</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gender</remote-name>
            <remote-type>20</remote-type>
            <local-name>[gender]</local-name>
            <parent-name>[bikes_all2018.csv]</parent-name>
            <remote-alias>gender</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bikeid</remote-name>
            <remote-type>20</remote-type>
            <local-name>[bikeid]</local-name>
            <parent-name>[bikes_all2018.csv]</parent-name>
            <remote-alias>bikeid</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>usertype</remote-name>
            <remote-type>129</remote-type>
            <local-name>[usertype]</local-name>
            <parent-name>[bikes_all2018.csv]</parent-name>
            <remote-alias>usertype</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start station id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[start station id]</local-name>
            <parent-name>[bikes_all2018.csv]</parent-name>
            <remote-alias>start station id</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start station name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[start station name]</local-name>
            <parent-name>[bikes_all2018.csv]</parent-name>
            <remote-alias>start station name</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start station latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[start station latitude]</local-name>
            <parent-name>[bikes_all2018.csv]</parent-name>
            <remote-alias>start station latitude</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start station longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[start station longitude]</local-name>
            <parent-name>[bikes_all2018.csv]</parent-name>
            <remote-alias>start station longitude</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end station id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[end station id]</local-name>
            <parent-name>[bikes_all2018.csv]</parent-name>
            <remote-alias>end station id</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end station name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[end station name]</local-name>
            <parent-name>[bikes_all2018.csv]</parent-name>
            <remote-alias>end station name</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end station latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[end station latitude]</local-name>
            <parent-name>[bikes_all2018.csv]</parent-name>
            <remote-alias>end station latitude</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end station longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[end station longitude]</local-name>
            <parent-name>[bikes_all2018.csv]</parent-name>
            <remote-alias>end station longitude</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Birth Year (group)]' role='dimension' type='ordinal'>
        <calculation class='categorical-bin' column='[birth year]' new-bin='true'>
          <bin default-name='false' value='&quot;30-50 yrs&quot;'>
            <value>1969</value>
            <value>1970</value>
            <value>1971</value>
            <value>1972</value>
            <value>1973</value>
            <value>1974</value>
            <value>1975</value>
            <value>1976</value>
            <value>1977</value>
            <value>1978</value>
            <value>1979</value>
            <value>1980</value>
            <value>1981</value>
            <value>1982</value>
            <value>1983</value>
            <value>1984</value>
            <value>1985</value>
            <value>1986</value>
            <value>1987</value>
            <value>1988</value>
            <value>1989</value>
          </bin>
          <bin default-name='false' value='&quot;Over 50 yrs&quot;'>
            <value>1887</value>
            <value>1888</value>
            <value>1900</value>
            <value>1931</value>
            <value>1939</value>
            <value>1940</value>
            <value>1941</value>
            <value>1942</value>
            <value>1943</value>
            <value>1944</value>
            <value>1945</value>
            <value>1946</value>
            <value>1947</value>
            <value>1948</value>
            <value>1949</value>
            <value>1950</value>
            <value>1951</value>
            <value>1952</value>
            <value>1953</value>
            <value>1954</value>
            <value>1955</value>
            <value>1956</value>
            <value>1957</value>
            <value>1958</value>
            <value>1959</value>
            <value>1960</value>
            <value>1961</value>
            <value>1962</value>
            <value>1963</value>
            <value>1964</value>
            <value>1965</value>
            <value>1966</value>
            <value>1967</value>
            <value>1968</value>
          </bin>
          <bin default-name='false' value='&quot;Under 30 yrs&quot;'>
            <value>1990</value>
            <value>1991</value>
            <value>1992</value>
            <value>1993</value>
            <value>1994</value>
            <value>1995</value>
            <value>1996</value>
            <value>1997</value>
            <value>1998</value>
            <value>1999</value>
            <value>2000</value>
            <value>2001</value>
            <value>2002</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Gender (group)]' role='dimension' type='ordinal'>
        <calculation class='categorical-bin' column='[gender]' new-bin='true'>
          <bin default-name='false' value='&quot;Female&quot;'>
            <value>2</value>
          </bin>
          <bin default-name='false' value='&quot;Male&quot;'>
            <value>1</value>
          </bin>
          <bin default-name='false' value='&quot;Unknown&quot;'>
            <value>0</value>
          </bin>
        </calculation>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Bikeid' datatype='integer' name='[bikeid]' role='measure' type='quantitative' />
      <column caption='Birth Year' datatype='integer' name='[birth year]' role='dimension' type='quantitative' />
      <column caption='End Station Id' datatype='integer' name='[end station id]' role='measure' type='quantitative' />
      <column aggregation='Avg' caption='End Station Latitude' datatype='real' name='[end station latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='End Station Longitude' datatype='real' name='[end station longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='End Station Name' datatype='string' name='[end station name]' role='dimension' type='nominal' />
      <column caption='Gender' datatype='integer' name='[gender]' role='measure' type='quantitative' />
      <column caption='Start Station Id' datatype='integer' name='[start station id]' role='measure' type='quantitative' />
      <column aggregation='Avg' caption='Start Station Latitude' datatype='real' name='[start station latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Start Station Longitude' datatype='real' name='[start station longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Start Station Name' datatype='string' name='[start station name]' role='dimension' type='nominal' />
      <column caption='Starttime' datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
      <column caption='Stoptime' datatype='datetime' name='[stoptime]' role='dimension' type='ordinal' />
      <column caption='Trip Id' datatype='integer' name='[trip_id]' role='dimension' type='ordinal' />
      <column caption='Tripduration' datatype='integer' name='[tripduration]' role='measure' type='quantitative' />
      <column caption='Usertype' datatype='string' name='[usertype]' role='dimension' type='nominal' />
      <column-instance column='[trip_id]' derivation='Count' name='[cnt:trip_id:qk]' pivot='key' type='quantitative' />
      <column-instance column='[starttime]' derivation='Quarter' name='[qr:starttime:ok]' pivot='key' type='ordinal' />
      <column-instance column='[tripduration]' derivation='Sum' name='[sum:tripduration:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Start Station Name)' hidden='true' name='[Action (Start Station Name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[start station name]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.527851' measure-ordering='alphabetic' measure-percentage='0.472149' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.08k27nw1r9imjy1chuwy20hcrdyr].[cnt:trip_id:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.08k27nw1r9imjy1chuwy20hcrdyr].[sum:tripduration:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.08k27nw1r9imjy1chuwy20hcrdyr].[usr:Calculation_203506438734807040:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[qr:starttime:ok]' type='palette'>
            <map to='#499894'>
              <bucket>9</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>1</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>5</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>10</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>6</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>2</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>7</bucket>
            </map>
            <map to='#e15759'>
              <bucket>11</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>8</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>3</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>12</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>4</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Gender (group)]' type='palette'>
            <map to='#4f7cba'>
              <bucket>&quot;Male&quot;</bucket>
            </map>
            <map to='#fc719e'>
              <bucket>&quot;Female&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Top 50 (Top 50 Stations)' inline='true' name='federated.1qk3qm41bzmqhk192ocbv06venjj' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Top 50 Stations' name='excel-direct.1upcal31450pi31a6jmph1lgxljh'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/cynne/Documents/Top 50 Stations.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1upcal31450pi31a6jmph1lgxljh' name='Top 50' table='[&apos;Top 50$&apos;]' type='table'>
          <columns gridOrigin='A1:D2451:no:A1:D2451:0' header='yes' outcome='6'>
            <column datatype='string' name='Station' ordinal='0' />
            <column datatype='integer' name='Start Rank' ordinal='1' />
            <column datatype='integer' name='End Rank' ordinal='2' />
            <column datatype='real' name='t' ordinal='3' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Station</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Station]</local-name>
            <parent-name>[Top 50]</parent-name>
            <remote-alias>Station</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Start Rank</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Start Rank]</local-name>
            <parent-name>[Top 50]</parent-name>
            <remote-alias>Start Rank</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>End Rank</remote-name>
            <remote-type>20</remote-type>
            <local-name>[End Rank]</local-name>
            <parent-name>[Top 50]</parent-name>
            <remote-alias>End Rank</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>t</remote-name>
            <remote-type>5</remote-type>
            <local-name>[t]</local-name>
            <parent-name>[Top 50]</parent-name>
            <remote-alias>t</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Top 50]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D2451:no:A1:D2451:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Sigmoid Function' datatype='real' name='[Calculation_1054686766478811142]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='1/(1+EXP(1)^-[t])' />
      </column>
      <column caption='Curve' datatype='real' name='[Calculation_1054686766478950407]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Start Rank] + (([End Rank]-[Start Rank])*[Calculation_1054686766478811142])' />
      </column>
      <column caption='Color' datatype='integer' name='[Calculation_1054686766479147016]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Calculation_1054686766478950407] &lt;10.5 then 1&#13;&#10;      ELSEIF [Calculation_1054686766478950407] &lt;20.5 then 2&#13;&#10;      ELSEIF [Calculation_1054686766478950407] &lt;30.5 then 3&#13;&#10;      ELSEIF [Calculation_1054686766478950407] &lt;40.5 then 4&#13;&#10;      ELSE 5 END' />
      </column>
      <column caption='Size' datatype='integer' name='[Calculation_1054686766479319049]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='ABS([End Rank]-[Start Rank])' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='T' datatype='real' name='[t]' role='measure' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.30504' measure-ordering='alphabetic' measure-percentage='0.69496' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='Station' />
        <field-sort-custom-order field='Start Rank' />
        <field-sort-custom-order field='End Rank' />
        <field-sort-custom-order field='t' />
        <field-sort-custom-order field='Calculation_1054686766478811142' />
        <field-sort-custom-order field='Calculation_1054686766478950407' />
        <field-sort-custom-order field='Calculation_1054686766479147016' />
        <field-sort-custom-order field='Calculation_1054686766479319049' />
      </field-sort-info>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
    <mapsource inline='true' name='MapBox' source-platform='win' version='18.1'>
      <connection api-key='pk.eyJ1IjoiY3luZGVyaW5vIiwiYSI6ImNqcXp3MTFkbTBpc3QzeXNlZm14MW5scWgifQ.gJz_0M9wlcVVN3Z-mb38HQ' class='MapBox' description='Mapbox Comic' full-url='https://api.mapbox.com/v4/{L}/{Z}/{X}/{Y}{D}.png256?access_token=pk.eyJ1IjoiY3luZGVyaW5vIiwiYSI6ImNqcXp3MTFkbTBpc3QzeXNlZm14MW5scWgifQ.gJz_0M9wlcVVN3Z-mb38HQ' inline='true' layer-separator=',' offline='' port='443' server='api.mapbox.com' service='https' tileset='US\normal' url-format='/v4/{L}/{Z}/{X}/{Y}{D}.png256?access_token=pk.eyJ1IjoiY3luZGVyaW5vIiwiYSI6ImNqcXp3MTFkbTBpc3QzeXNlZm14MW5scWgifQ.gJz_0M9wlcVVN3Z-mb38HQ' username='' wait-tile-color='#dddddd' />
      <languages />
      <layers>
        <layer display-name='Comic!' name='mapbox.comic' show-ui='true' type='features' />
      </layers>
      <properties />
      <map-styles>
        <map-style display-name='MapBox' name='MapBox' wait-tile-color='#dddddd'>
          <map-layer-style name='Comic!' request-string='mapbox.comic' />
        </map-style>
      </map-styles>
      <mapsource-defaults version='18.1'>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='mapbox.comic' value='true' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
          </style-rule>
        </style>
      </mapsource-defaults>
      <map-attribution copyright-string='About Maps' copyright-url='http://www.tableau.com/mapdata' short-copyright-string='' />
    </mapsource>
    <mapsource inline='true' name='MapBox Basic' source-platform='win' version='18.1'>
      <connection api-key='pk.eyJ1IjoiY3luZGVyaW5vIiwiYSI6ImNqcXp3MTFkbTBpc3QzeXNlZm14MW5scWgifQ.gJz_0M9wlcVVN3Z-mb38HQ' class='MapBox' description='Mapbox Basic' full-url='https://api.mapbox.com/v4/{L}/{Z}/{X}/{Y}{D}.png256?access_token=pk.eyJ1IjoiY3luZGVyaW5vIiwiYSI6ImNqcXp3MTFkbTBpc3QzeXNlZm14MW5scWgifQ.gJz_0M9wlcVVN3Z-mb38HQ' inline='true' layer-separator=',' offline='' port='443' server='api.mapbox.com' service='https' tileset='US\normal' url-format='/v4/{L}/{Z}/{X}/{Y}{D}.png256?access_token=pk.eyJ1IjoiY3luZGVyaW5vIiwiYSI6ImNqcXp3MTFkbTBpc3QzeXNlZm14MW5scWgifQ.gJz_0M9wlcVVN3Z-mb38HQ' username='' wait-tile-color='#dddddd' />
      <languages />
      <layers>
        <layer display-name='Streets Classic' name='mapbox.streets-basic' show-ui='true' type='features' />
      </layers>
      <properties />
      <map-styles>
        <map-style display-name='MapBox Basic' name='MapBox Basic' wait-tile-color='#dddddd'>
          <map-layer-style name='Streets Classic' request-string='mapbox.streets-basic' />
        </map-style>
      </map-styles>
      <mapsource-defaults version='18.1'>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='mapbox.streets-basic' value='true' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
          </style-rule>
        </style>
      </mapsource-defaults>
      <map-attribution copyright-string='About Maps' copyright-url='http://www.tableau.com/mapdata' short-copyright-string='' />
    </mapsource>
  </mapsources>
  <actions>
    <action caption='Filter1' name='[Action1]'>
      <source dashboard='Station Popularity' type='sheet' />
      <link caption='Filter1' delimiter=',' escape='\' expression='tsl:Station%20Popularity?%5Bfederated.08k27nw1r9imjy1chuwy20hcrdyr%5D.%5BGender%20%28group%29%5D~s0=&lt;[Gender (group)]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='target' value='Station Popularity' />
      </command>
    </action>
    <action caption='Filter 1 (generated)' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Station Popularity' type='sheet' worksheet='Map' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Station Popularity' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action3]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Station Popularity' type='sheet' worksheet='# of Trips' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Station Popularity' />
      </command>
    </action>
    <datasources>
      <datasource caption='bikes_all2018' name='federated.08k27nw1r9imjy1chuwy20hcrdyr' />
    </datasources>
    <datasource-dependencies datasource='federated.08k27nw1r9imjy1chuwy20hcrdyr'>
      <column datatype='string' name='[Gender (group)]' role='dimension' type='ordinal'>
        <calculation class='categorical-bin' column='[gender]' new-bin='true'>
          <bin default-name='false' value='&quot;Female&quot;'>
            <value>2</value>
          </bin>
          <bin default-name='false' value='&quot;Male&quot;'>
            <value>1</value>
          </bin>
          <bin default-name='false' value='&quot;Unknown&quot;'>
            <value>0</value>
          </bin>
        </calculation>
      </column>
      <column caption='Gender' datatype='integer' name='[gender]' role='measure' type='quantitative' />
    </datasource-dependencies>
  </actions>
  <worksheets>
    <worksheet name='# of Trips'>
      <table>
        <view>
          <datasources>
            <datasource caption='bikes_all2018' name='federated.08k27nw1r9imjy1chuwy20hcrdyr' />
          </datasources>
          <datasource-dependencies datasource='federated.08k27nw1r9imjy1chuwy20hcrdyr'>
            <column caption='SUM([Tripduration])/84600' datatype='real' name='[Calculation_203506438734807040]' role='measure' type='quantitative' user:unnamed='# of Trips'>
              <calculation class='tableau' formula='SUM([tripduration])/84600' />
            </column>
            <column datatype='string' name='[Gender (group)]' role='dimension' type='ordinal'>
              <calculation class='categorical-bin' column='[gender]' new-bin='true'>
                <bin default-name='false' value='&quot;Female&quot;'>
                  <value>2</value>
                </bin>
                <bin default-name='false' value='&quot;Male&quot;'>
                  <value>1</value>
                </bin>
                <bin default-name='false' value='&quot;Unknown&quot;'>
                  <value>0</value>
                </bin>
              </calculation>
            </column>
            <column-instance column='[trip_id]' derivation='Count' name='[cnt:trip_id:qk]' pivot='key' type='quantitative' />
            <column caption='Gender' datatype='integer' name='[gender]' role='measure' type='quantitative' />
            <column-instance column='[starttime]' derivation='Month' name='[mn:starttime:ok]' pivot='key' type='ordinal' />
            <column caption='Start Station Name' datatype='string' name='[start station name]' role='dimension' type='nominal' />
            <column caption='Starttime' datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
            <column caption='Trip Id' datatype='integer' name='[trip_id]' role='dimension' type='ordinal' />
            <column caption='Tripduration' datatype='integer' name='[tripduration]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_203506438734807040]' derivation='User' name='[usr:Calculation_203506438734807040:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.08k27nw1r9imjy1chuwy20hcrdyr].[Action (Start Station Name)]'>
            <groupfilter function='level-members' level='[start station name]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.08k27nw1r9imjy1chuwy20hcrdyr].[Gender (group)]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Gender (group)]' member='&quot;Female&quot;' />
              <groupfilter function='member' level='[Gender (group)]' member='&quot;Male&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.08k27nw1r9imjy1chuwy20hcrdyr].[Gender (group)]</column>
            <column>[federated.08k27nw1r9imjy1chuwy20hcrdyr].[Action (Start Station Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.08k27nw1r9imjy1chuwy20hcrdyr].[cnt:trip_id:qk]' value='n#,##0,K;-#,##0,K' />
            <format attr='text-format' field='[federated.08k27nw1r9imjy1chuwy20hcrdyr].[usr:Calculation_203506438734807040:qk]' value='*hh:mm' />
            <format attr='text-format' field='[federated.08k27nw1r9imjy1chuwy20hcrdyr].[mn:starttime:ok]' value='iLLL' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.08k27nw1r9imjy1chuwy20hcrdyr].[mn:starttime:ok]' value='iLLL' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.08k27nw1r9imjy1chuwy20hcrdyr].[cnt:trip_id:qk]' />
              <text column='[federated.08k27nw1r9imjy1chuwy20hcrdyr].[mn:starttime:ok]' />
              <color column='[federated.08k27nw1r9imjy1chuwy20hcrdyr].[usr:Calculation_203506438734807040:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Month:&#9;</run>
                <run bold='true'>&lt;[federated.08k27nw1r9imjy1chuwy20hcrdyr].[mn:starttime:ok]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Total Trips:&#9;</run>
                <run bold='true'>&lt;[federated.08k27nw1r9imjy1chuwy20hcrdyr].[cnt:trip_id:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Total Trip Time:&#9;</run>
                <run bold='true'>&lt;[federated.08k27nw1r9imjy1chuwy20hcrdyr].[usr:Calculation_203506438734807040:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='14' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Age Groups'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='20'>Who are the 2018 Citi Bike Users?</run>
            <run fontalignment='1'>Æ&#10;</run>
            <run fontalignment='1' fontsize='10'>Top Users: Men between 30 &amp; 50 years of age</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='bikes_all2018' name='federated.08k27nw1r9imjy1chuwy20hcrdyr' />
          </datasources>
          <datasource-dependencies datasource='federated.08k27nw1r9imjy1chuwy20hcrdyr'>
            <column datatype='string' name='[Birth Year (group)]' role='dimension' type='ordinal'>
              <calculation class='categorical-bin' column='[birth year]' new-bin='true'>
                <bin default-name='false' value='&quot;30-50 yrs&quot;'>
                  <value>1969</value>
                  <value>1970</value>
                  <value>1971</value>
                  <value>1972</value>
                  <value>1973</value>
                  <value>1974</value>
                  <value>1975</value>
                  <value>1976</value>
                  <value>1977</value>
                  <value>1978</value>
                  <value>1979</value>
                  <value>1980</value>
                  <value>1981</value>
                  <value>1982</value>
                  <value>1983</value>
                  <value>1984</value>
                  <value>1985</value>
                  <value>1986</value>
                  <value>1987</value>
                  <value>1988</value>
                  <value>1989</value>
                </bin>
                <bin default-name='false' value='&quot;Over 50 yrs&quot;'>
                  <value>1887</value>
                  <value>1888</value>
                  <value>1900</value>
                  <value>1931</value>
                  <value>1939</value>
                  <value>1940</value>
                  <value>1941</value>
                  <value>1942</value>
                  <value>1943</value>
                  <value>1944</value>
                  <value>1945</value>
                  <value>1946</value>
                  <value>1947</value>
                  <value>1948</value>
                  <value>1949</value>
                  <value>1950</value>
                  <value>1951</value>
                  <value>1952</value>
                  <value>1953</value>
                  <value>1954</value>
                  <value>1955</value>
                  <value>1956</value>
                  <value>1957</value>
                  <value>1958</value>
                  <value>1959</value>
                  <value>1960</value>
                  <value>1961</value>
                  <value>1962</value>
                  <value>1963</value>
                  <value>1964</value>
                  <value>1965</value>
                  <value>1966</value>
                  <value>1967</value>
                  <value>1968</value>
                </bin>
                <bin default-name='false' value='&quot;Under 30 yrs&quot;'>
                  <value>1990</value>
                  <value>1991</value>
                  <value>1992</value>
                  <value>1993</value>
                  <value>1994</value>
                  <value>1995</value>
                  <value>1996</value>
                  <value>1997</value>
                  <value>1998</value>
                  <value>1999</value>
                  <value>2000</value>
                  <value>2001</value>
                  <value>2002</value>
                </bin>
              </calculation>
            </column>
            <column datatype='integer' name='[F1]' role='measure' type='quantitative' />
            <column datatype='string' name='[Gender (group)]' role='dimension' type='ordinal'>
              <calculation class='categorical-bin' column='[gender]' new-bin='true'>
                <bin default-name='false' value='&quot;Female&quot;'>
                  <value>2</value>
                </bin>
                <bin default-name='false' value='&quot;Male&quot;'>
                  <value>1</value>
                </bin>
                <bin default-name='false' value='&quot;Unknown&quot;'>
                  <value>0</value>
                </bin>
              </calculation>
            </column>
            <column caption='Birth Year' datatype='integer' name='[birth year]' role='dimension' type='quantitative' />
            <column-instance column='[F1]' derivation='CountD' name='[ctd:F1:qk]' pivot='key' type='quantitative' />
            <column caption='Gender' datatype='integer' name='[gender]' role='measure' type='quantitative' />
            <column-instance column='[starttime]' derivation='Quarter' name='[qr:starttime:ok]' pivot='key' type='ordinal' />
            <column caption='Starttime' datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.08k27nw1r9imjy1chuwy20hcrdyr].[Birth Year (group)]'>
            <groupfilter from='&quot;30-50 yrs&quot;' function='range' level='[Birth Year (group)]' to='&quot;Under 30 yrs&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.08k27nw1r9imjy1chuwy20hcrdyr].[Gender (group)]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Gender (group)]' member='&quot;Female&quot;' />
              <groupfilter function='member' level='[Gender (group)]' member='&quot;Male&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.08k27nw1r9imjy1chuwy20hcrdyr].[Birth Year (group)]</column>
            <column>[federated.08k27nw1r9imjy1chuwy20hcrdyr].[Gender (group)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.08k27nw1r9imjy1chuwy20hcrdyr].[ctd:F1:qk]' scope='rows' value='# of Trips' />
            <format attr='display' class='0' field='[federated.08k27nw1r9imjy1chuwy20hcrdyr].[ctd:F1:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.08k27nw1r9imjy1chuwy20hcrdyr].[ctd:F1:qk]' value='n#,##0,K;-#,##0,K' />
            <format attr='text-align' field='[federated.08k27nw1r9imjy1chuwy20hcrdyr].[ctd:F1:qk]' value='auto' />
            <format attr='vertical-align' field='[federated.08k27nw1r9imjy1chuwy20hcrdyr].[ctd:F1:qk]' value='auto' />
            <format attr='wrap' field='[federated.08k27nw1r9imjy1chuwy20hcrdyr].[ctd:F1:qk]' value='auto' />
            <format attr='font-size' field='[federated.08k27nw1r9imjy1chuwy20hcrdyr].[Birth Year (group)]' value='11' />
            <format attr='color' field='[federated.08k27nw1r9imjy1chuwy20hcrdyr].[Birth Year (group)]' value='#002776' />
            <format attr='font-weight' field='[federated.08k27nw1r9imjy1chuwy20hcrdyr].[Birth Year (group)]' value='bold' />
            <format attr='color' field='[federated.08k27nw1r9imjy1chuwy20hcrdyr].[qr:starttime:ok]' value='#002776' />
            <format attr='font-weight' field='[federated.08k27nw1r9imjy1chuwy20hcrdyr].[qr:starttime:ok]' value='bold' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.08k27nw1r9imjy1chuwy20hcrdyr].[ctd:F1:qk]' value='n#,##0,K;-#,##0,K' />
            <format attr='font-size' field='[federated.08k27nw1r9imjy1chuwy20hcrdyr].[Birth Year (group)]' value='11' />
            <format attr='color' field='[federated.08k27nw1r9imjy1chuwy20hcrdyr].[Birth Year (group)]' value='#002776' />
            <format attr='font-weight' field='[federated.08k27nw1r9imjy1chuwy20hcrdyr].[Birth Year (group)]' value='bold' />
            <format attr='color' field='[federated.08k27nw1r9imjy1chuwy20hcrdyr].[qr:starttime:ok]' value='#002776' />
            <format attr='font-size' field='[federated.08k27nw1r9imjy1chuwy20hcrdyr].[qr:starttime:ok]' value='10' />
            <format attr='font-weight' field='[federated.08k27nw1r9imjy1chuwy20hcrdyr].[qr:starttime:ok]' value='bold' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.08k27nw1r9imjy1chuwy20hcrdyr].[ctd:F1:qk]' value='false' />
            <format attr='break-on-special' field='[federated.08k27nw1r9imjy1chuwy20hcrdyr].[ctd:F1:qk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.08k27nw1r9imjy1chuwy20hcrdyr].[ctd:F1:qk]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <color column='[federated.08k27nw1r9imjy1chuwy20hcrdyr].[Gender (group)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.60000002384185791' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.08k27nw1r9imjy1chuwy20hcrdyr].[ctd:F1:qk]</rows>
        <cols>([federated.08k27nw1r9imjy1chuwy20hcrdyr].[Birth Year (group)] / [federated.08k27nw1r9imjy1chuwy20hcrdyr].[qr:starttime:ok])</cols>
        <mark-labels>
          <mark-label id='0' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.08k27nw1r9imjy1chuwy20hcrdyr].[Birth Year (group)]</field>
                    <field>[federated.08k27nw1r9imjy1chuwy20hcrdyr].[qr:starttime:ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.08k27nw1r9imjy1chuwy20hcrdyr].[ctd:F1:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.08k27nw1r9imjy1chuwy20hcrdyr].[Birth Year (group)]</field>
                  <field>[federated.08k27nw1r9imjy1chuwy20hcrdyr].[Gender (group)]</field>
                  <field>[federated.08k27nw1r9imjy1chuwy20hcrdyr].[ctd:F1:qk]</field>
                  <field>[federated.08k27nw1r9imjy1chuwy20hcrdyr].[qr:starttime:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;30-50 yrs&quot;</value>
                <value>&quot;Male&quot;</value>
                <value>182241</value>
                <value>3</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='1' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.08k27nw1r9imjy1chuwy20hcrdyr].[Birth Year (group)]</field>
                    <field>[federated.08k27nw1r9imjy1chuwy20hcrdyr].[qr:starttime:ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.08k27nw1r9imjy1chuwy20hcrdyr].[ctd:F1:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.08k27nw1r9imjy1chuwy20hcrdyr].[Birth Year (group)]</field>
                  <field>[federated.08k27nw1r9imjy1chuwy20hcrdyr].[Gender (group)]</field>
                  <field>[federated.08k27nw1r9imjy1chuwy20hcrdyr].[ctd:F1:qk]</field>
                  <field>[federated.08k27nw1r9imjy1chuwy20hcrdyr].[qr:starttime:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Over 50 yrs&quot;</value>
                <value>&quot;Male&quot;</value>
                <value>17493</value>
                <value>1</value>
              </tuple>
            </tuple-reference>
            <label-position x='0.555556' y='14' />
          </mark-label>
        </mark-labels>
      </table>
    </worksheet>
    <worksheet name='Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='bikes_all2018' name='federated.08k27nw1r9imjy1chuwy20hcrdyr' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.08k27nw1r9imjy1chuwy20hcrdyr'>
            <column datatype='string' name='[Gender (group)]' role='dimension' type='ordinal'>
              <calculation class='categorical-bin' column='[gender]' new-bin='true'>
                <bin default-name='false' value='&quot;Female&quot;'>
                  <value>2</value>
                </bin>
                <bin default-name='false' value='&quot;Male&quot;'>
                  <value>1</value>
                </bin>
                <bin default-name='false' value='&quot;Unknown&quot;'>
                  <value>0</value>
                </bin>
              </calculation>
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[start station latitude]' derivation='Avg' name='[avg:start station latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[start station longitude]' derivation='Avg' name='[avg:start station longitude:qk]' pivot='key' type='quantitative' />
            <column caption='Gender' datatype='integer' name='[gender]' role='measure' type='quantitative' />
            <column-instance column='[start station name]' derivation='None' name='[none:start station name:nk]' pivot='key' type='nominal' />
            <column aggregation='Avg' caption='Start Station Latitude' datatype='real' name='[start station latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Start Station Longitude' datatype='real' name='[start station longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Start Station Name' datatype='string' name='[start station name]' role='dimension' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.08k27nw1r9imjy1chuwy20hcrdyr].[Gender (group)]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Gender (group)]' member='&quot;Female&quot;' />
              <groupfilter function='member' level='[Gender (group)]' member='&quot;Male&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.08k27nw1r9imjy1chuwy20hcrdyr].[Gender (group)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.08k27nw1r9imjy1chuwy20hcrdyr].[avg:start station longitude:qk]' field-type='quantitative' max='-8240420.2422615848' min='-8245944.6335762395' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.08k27nw1r9imjy1chuwy20hcrdyr].[avg:start station latitude:qk]' field-type='quantitative' max='4972842.8921728199' min='4969964.0641550897' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='true' />
            <format attr='enabled' id='light_adm0_bnd' value='true' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='true' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.08k27nw1r9imjy1chuwy20hcrdyr].[none:start station name:nk]' />
              <size column='[federated.08k27nw1r9imjy1chuwy20hcrdyr].[sum:Number of Records:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Start Station Name:&#9;</run>
                <run bold='true'>&lt;[federated.08k27nw1r9imjy1chuwy20hcrdyr].[none:start station name:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'># of Trip Starts:&#9;</run>
                <run bold='true'>&lt;[federated.08k27nw1r9imjy1chuwy20hcrdyr].[sum:Number of Records:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.08k27nw1r9imjy1chuwy20hcrdyr].[avg:start station latitude:qk]</rows>
        <cols>[federated.08k27nw1r9imjy1chuwy20hcrdyr].[avg:start station longitude:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Top 50 Stations'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#ffffff' fontsize='16'>Top 50 Stations: Trip Starting Point Rank vs Ending Point Rank</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Top 50 (Top 50 Stations)' name='federated.1qk3qm41bzmqhk192ocbv06venjj' />
          </datasources>
          <datasource-dependencies datasource='federated.1qk3qm41bzmqhk192ocbv06venjj'>
            <column caption='Sigmoid Function' datatype='real' name='[Calculation_1054686766478811142]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='1/(1+EXP(1)^-[t])' />
            </column>
            <column caption='Curve' datatype='real' name='[Calculation_1054686766478950407]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Start Rank] + (([End Rank]-[Start Rank])*[Calculation_1054686766478811142])' />
            </column>
            <column caption='-1*[Start Rank]' datatype='integer' name='[Calculation_1054686766497296394]' role='measure' type='quantitative' user:unnamed='Sheet 2'>
              <calculation class='tableau' formula='-1*[Start Rank]' />
            </column>
            <column datatype='integer' name='[End Rank]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Start Rank]' role='measure' type='quantitative' />
            <column datatype='string' name='[Station]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1054686766497296394]' derivation='None' name='[none:Calculation_1054686766497296394:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Station]' derivation='None' name='[none:Station:nk]' pivot='key' type='nominal' />
            <column-instance column='[t]' derivation='None' name='[none:t:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1054686766478950407]' derivation='Sum' name='[sum:Calculation_1054686766478950407:qk]' pivot='key' type='quantitative' />
            <column-instance column='[t]' derivation='Sum' name='[sum:t:qk]' pivot='key' type='quantitative' />
            <column caption='T' datatype='real' name='[t]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1qk3qm41bzmqhk192ocbv06venjj].[sum:Calculation_1054686766478950407:qk]' field-type='quantitative' reverse='true' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.1qk3qm41bzmqhk192ocbv06venjj].[sum:t:qk]' field-type='quantitative' max='8.5' min='-8.5' range-type='fixed' scope='cols' type='space' />
            <format attr='height' field='[federated.1qk3qm41bzmqhk192ocbv06venjj].[sum:t:qk]' value='10' />
            <format attr='display' class='0' field='[federated.1qk3qm41bzmqhk192ocbv06venjj].[sum:Calculation_1054686766478950407:qk]' scope='rows' value='false' />
            <format attr='display' class='0' field='[federated.1qk3qm41bzmqhk192ocbv06venjj].[sum:t:qk]' scope='cols' value='false' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1qk3qm41bzmqhk192ocbv06venjj].[sum:Calculation_1054686766478950407:qk]' value='n#,##0;-#,##0' />
            <format attr='cell-w' value='60' />
            <format attr='cell-h' value='40' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.1qk3qm41bzmqhk192ocbv06venjj].[none:Station:nk]' value='8' />
            <format attr='font-family' field='[federated.1qk3qm41bzmqhk192ocbv06venjj].[none:Station:nk]' value='Tableau Light' />
            <format attr='text-align' field='[federated.1qk3qm41bzmqhk192ocbv06venjj].[none:Station:nk]' value='right' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='8' />
            <format attr='font-family' value='Arial Narrow' />
          </style-rule>
          <style-rule element='caption'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='title'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='14' />
            <format attr='border-color' value='#0055ff' />
            <format attr='border-style' value='none' />
            <format attr='background-color' value='#002776' />
          </style-rule>
          <style-rule element='tooltip'>
            <format attr='font-size' value='8' />
            <format attr='font-family' value='Arial Narrow' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1qk3qm41bzmqhk192ocbv06venjj].[none:Station:nk]' />
              <size column='[federated.1qk3qm41bzmqhk192ocbv06venjj].[none:Calculation_1054686766497296394:qk]' />
              <text column='[federated.1qk3qm41bzmqhk192ocbv06venjj].[none:Station:nk]' />
              <text column='[federated.1qk3qm41bzmqhk192ocbv06venjj].[sum:Calculation_1054686766478950407:qk]' />
              <lod column='[federated.1qk3qm41bzmqhk192ocbv06venjj].[none:Station:nk]' />
              <lod column='[federated.1qk3qm41bzmqhk192ocbv06venjj].[none:t:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>-1*[Start Rank]:&#9;</run>
                <run bold='true'>&lt;[federated.1qk3qm41bzmqhk192ocbv06venjj].[none:Calculation_1054686766497296394:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Station:&#9;</run>
                <run bold='true'>&lt;[federated.1qk3qm41bzmqhk192ocbv06venjj].[none:Station:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>T:&#9;</run>
                <run bold='true'>&lt;[federated.1qk3qm41bzmqhk192ocbv06venjj].[none:t:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Curve:&#9;</run>
                <run bold='true'>&lt;[federated.1qk3qm41bzmqhk192ocbv06venjj].[sum:Calculation_1054686766478950407:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>T:&#9;</run>
                <run bold='true'>&lt;[federated.1qk3qm41bzmqhk192ocbv06venjj].[sum:t:qk]&gt;</run>
                <run>&#10;&lt;Full Name&gt;&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run fontalignment='2' fontcolor='#2c1e2d' fontname='Univers' fontsize='12'>&lt;</run>
                <run fontalignment='2' fontcolor='#2c1e2d' fontname='Univers' fontsize='12'>[federated.1qk3qm41bzmqhk192ocbv06venjj].[sum:Calculation_1054686766478950407:qk]</run>
                <run fontalignment='2' fontcolor='#2c1e2d' fontname='Univers' fontsize='12'>&gt;. &lt;</run>
                <run fontalignment='2' fontcolor='#2c1e2d' fontname='Univers' fontsize='12'>[federated.1qk3qm41bzmqhk192ocbv06venjj].[none:Station:nk]</run>
                <run fontalignment='2' fontcolor='#2c1e2d' fontname='Univers' fontsize='12'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='vertical-align' value='auto' />
                <format attr='text-align' value='auto' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-range-field' value='[federated.1qk3qm41bzmqhk192ocbv06venjj].[none:Station:nk]' />
                <format attr='mark-labels-mode' value='line-ends' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='size' value='1' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='1116' />
                <format attr='maxheight' value='1116' />
                <format attr='minwidth' value='842' />
                <format attr='maxwidth' value='842' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1qk3qm41bzmqhk192ocbv06venjj].[sum:Calculation_1054686766478950407:qk]</rows>
        <cols>[federated.1qk3qm41bzmqhk192ocbv06venjj].[sum:t:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Citi Bike Users'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='71500' id='11' is-centered='0' is-scaled='1' param='C:/Users/cynne/Documents/My Tableau Repository/Shapes/My Image/pic2.png' type='bitmap' w='50200' x='48900' y='500' />
        <zone h='4375' id='12' is-centered='0' is-scaled='1' param='C:/Users/cynne/Documents/My Tableau Repository/Shapes/My Image/pic3.png' type='bitmap' w='46800' x='50600' y='71250' />
        <zone h='16875' id='13' is-centered='0' is-scaled='1' param='C:/Users/cynne/Documents/My Tableau Repository/Shapes/My Image/pic1.png' type='bitmap' w='45500' x='2500' y='1250' />
        <zone h='58500' id='14' name='Age Groups' w='48700' x='0' y='16375' />
        <zone h='6250' id='19' name='Age Groups' pane-specification-id='0' param='[federated.08k27nw1r9imjy1chuwy20hcrdyr].[Gender (group)]' show-title='false' type='color' w='7400' x='41100' y='28875' />
      </zones>
    </dashboard>
    <dashboard name='Station Popularity'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Æ&#10;</run>
            <run fontalignment='1'>Æ&#10;</run>
            <run bold='true' fontalignment='1'>Monthly Trip Count &amp; Station Popularity</run>
            <run fontalignment='1'>Æ&#10;</run>
            <run fontalignment='1' fontsize='10'>Size Factor: Total Starting Trip Count</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='3' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='10' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='6' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
              <zone h='15875' id='7' type='title' w='98400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='52000' id='1' name='Map' show-title='false' w='57000' x='42700' y='19500' />
        <zone h='51625' id='2' name='# of Trips' show-title='false' w='42100' x='400' y='19625' />
        <zone h='5500' id='11' type='text' w='56700' x='42700' y='71125'>
          <formatted-text>
            <run fontalignment='1' fontcolor='#002776' fontsize='10'>Click the Station on the Map to see which months had the most traffic</run>
          </formatted-text>
        </zone>
        <zone h='7750' id='12' is-centered='0' is-scaled='1' param='C:/Users/cynne/Documents/My Tableau Repository/Shapes/My Image/pic1.png' type='bitmap' w='31000' x='37300' y='1250' />
      </zones>
    </dashboard>
    <dashboard name='Top Stations'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='1' name='Top 50 Stations' w='98400' x='800' y='1000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='135'>
    <window class='dashboard' maximized='true' name='Citi Bike Users'>
      <viewpoints>
        <viewpoint name='Age Groups'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.08k27nw1r9imjy1chuwy20hcrdyr].[Gender (group)]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{601A3514-7559-41A6-9015-498E4C84AEAD}' />
    </window>
    <window class='dashboard' name='Station Popularity'>
      <viewpoints>
        <viewpoint name='# of Trips'>
          <floating-toolbar-visibility value='2' />
        </viewpoint>
        <viewpoint name='Map'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
      </viewpoints>
      <active id='1' />
      <simple-id uuid='{24E6C9F7-FBEF-49B6-BEBE-6EA9F41C0550}' />
    </window>
    <window class='dashboard' name='Top Stations'>
      <viewpoints>
        <viewpoint name='Top 50 Stations'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{CAF543FB-3163-4AF9-9A15-67C5E057AA2B}' />
    </window>
    <window class='worksheet' hidden='true' name='# of Trips'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.08k27nw1r9imjy1chuwy20hcrdyr].[:Measure Names]</field>
            <field>[federated.08k27nw1r9imjy1chuwy20hcrdyr].[Gender (group)]</field>
            <field>[federated.08k27nw1r9imjy1chuwy20hcrdyr].[mn:starttime:ok]</field>
            <field>[federated.08k27nw1r9imjy1chuwy20hcrdyr].[none:trip_id:ok]</field>
            <field>[federated.08k27nw1r9imjy1chuwy20hcrdyr].[usr:Calculation_203506438734807040:qk]</field>
            <field>[federated.08k27nw1r9imjy1chuwy20hcrdyr].[yr:starttime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{207C4931-E64A-4D29-8DE2-C2C134377A70}' />
    </window>
    <window class='worksheet' hidden='true' name='Age Groups'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.08k27nw1r9imjy1chuwy20hcrdyr].[Gender (group)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.08k27nw1r9imjy1chuwy20hcrdyr].[Birth Year (group)]</field>
            <field>[federated.08k27nw1r9imjy1chuwy20hcrdyr].[Gender (group)]</field>
            <field>[federated.08k27nw1r9imjy1chuwy20hcrdyr].[yr:starttime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EAF62AD6-F7D7-4F26-B637-40E88AE41C0C}' />
    </window>
    <window class='worksheet' hidden='true' name='Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.08k27nw1r9imjy1chuwy20hcrdyr].[Gender (group)]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.08k27nw1r9imjy1chuwy20hcrdyr].[Gender (group)]</field>
            <field>[federated.08k27nw1r9imjy1chuwy20hcrdyr].[none:start station name:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{37C597A3-A4DD-41C1-BF01-7A3413F3B62D}' />
    </window>
    <window class='worksheet' hidden='true' name='Top 50 Stations'>
      <cards>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='left'>
          <strip size='160'>
            <card type='marks' />
            <card type='filters' />
            <card type='pages' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.1qk3qm41bzmqhk192ocbv06venjj].[none:Calculation_1054686766497296394:qk]</field>
            <field>[federated.1qk3qm41bzmqhk192ocbv06venjj].[none:Station:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FCF2616B-6B95-4221-9E25-CB739192726F}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Citi Bike Users' width='192'>
      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
      aTT4W//sK8xdW+Bz/+sY/+W/P8OF1Tp/559+gWrL4Tf+wRdo1mv8o899C4CvfeMVPvfFFzh5
      YZlSscrGVp2//ztf5dLMEqWazczlRb789eP4YcTzR0/z3Vdmbpgme67PxlqFf/G5P2J+aZP/
      /998nY31Cq4f8nf/vy8SaSq//lu/B8R2jF95+hinZ1b4d//pG/yXPzrB+sYWv/elo8wulvj8
      7z7D5//wdZZWNqm3PF4/cZFvPn+OKAz4zkvn+P2vHsPxQ1565dw7E+DFVy7ylW+dZa1Y5RvP
      z+x6Y6/HXV3Y4MtfO0k93Dnu/Pk5nvneWc5eKfLci+c4u9C4ZdzsWouvfvl5Fnf5wqpvlvij
      5y7wyplVvv3119n0dr7uW3HLvHRshuden79N3Aqvvj7L0ZOLt4lb5czZyzz3+i4uGCLg6W+f
      5psvzTJ/ZY6jpzZ2PN/b486dn+f/fPfiO06z072eXy7yh18/TUvcOs7xfT73P17euX07kOvq
      4Nd+LhbiffZnHuPcm5d46P5YRTu/vM70oXF+7Zce59TpOY6fW+LXfukjPDDRxZlz8+Q7u/kr
      f/ojXJhdut4gcvkM//hffpkLM6tcXiyxsrTO3/udp8kYEn/tn/wBp85c5vNfOso//LffxPX9
      G+3o7e3k5z4xSWd/H48fGsCPfL70jddZWqswv97g137+MZTQIQAunp/l9755BtuJHwAhBJsb
      ZaqOy9/+Z18GIIoEp87Ncfb8NX77C6/w4tGTfOvlC/zjf/9tVlfX+P3/e5zf+u2vvTMBNqoe
      93RIVJU0gbu7Vcf1uNWGIDQNEsrOcRcXajz1sVHm5iuEto27yzTL9bhnv/oyr17aYm6jsWPc
      uTMrPPyRKYprRTrTJu4uszZvxW3hug6dnZnbxJVIJxUqde+WcRvzCzzzylUuzBZ3vnCzgpco
      ELRsRgaylKu73MO3xYkwInML6fmNz0SYlGsNol2cW67H/Yc/OMHqVpOKHe4cuAPXx8P//F/9
      bxI9ffzGLz/G2XNz6KbFwtI6l2ZX6R/oYKgny/kra8ytVBjd10OlXGbmyipdhbcUr6Mj3aQN
      FS8USEChq4OsGrC4UaVScyjk8zx8ZIx/8fd+ln//X7/N3HKJWjO+T8+9eI5Pffxe9ESKr37+
      b/BXf/EBjr5xjbSlcG1lCyeQUIDJg2P85Z87wu/852cZ7M9zz9Qgn//CcximieMEDPblOTw1
      ABI06i16ewscGOmiVGkx0NvB5P4eHFfwL3/rF965J1gOfV6aKXOg12JxvcbQUBfGDqL363F9
      WR1DUxnoy++oje9MKTz7wizdw11EAkYGC2Ssmxefr8fd/2MP8JP39dDV3UFie/H27Xtu+/qz
      vPbaZTASeK5HIKv07+DkcCNON3CaET292R1Nr27EaQZRCH29uR3Vr9fjpGSOv/DZw2Qsk84O
      66b2oVvUNtZZbwTokmCzETC1r+PmG/O2OA1BIp1gsHvnmbjr93q8N0kkqYyNdLCDCPVG3F/6
      5UfY151isOet8+22b/n6G8T1fPaN9LK+UWF5tcyFuSIzZ2cZODBGjxHyzWNz/OZf+zSP37eP
      //jfv8PHnryfjz84RiEh8d++9ib/8G/+NPl0LJt+7ugZ7rl3nMfvGSJfyNLVkeLP/ezDzG3a
      3Lc/z8W5Ep/5sUP8wVePMTjShxY6tCKVwe4M5XqTqYkhsqbEP/3Xf8R8yeXv/MUf59FDg/zz
      //AMf/0vPsX+gQ6Km1v8/teO88jDkzx+eJhn/vgcn/2Je3j1zXkee3CCjz2wj6f/+Cwff2Sc
      I0cOsDG/yGLZ59d/+XHCCA6N95BJWXz3+TNIjuOIH+am+NvhbltofFj5sLcPdm7j7WaBKrUm
      ucyP6Kao7wNJtCeE9yTtadCYH6mV4DbvH+2HP6adAG32NO0EaLOnaSdAmz1NOwHa7GnaCdBm
      T9NOgDZ7mnYCtNnTtBOgzZ6mnQBt9jTtBGizp2knQJs9TTsB2uxp2gnQZk/TToA2e5p2ArTZ
      07QToM2epp0AbfY07QRos6dpJ0CbPU07AdrsadoJ0GZP006ANnuadgK02dO0E6DNnqadAG32
      NO0EaLOnaSdAmz1NOwHa7GnaCdBmT9NOgDZ7mnYCtNnTtBOgzZ6mnQBt9jTtBGizp2knQJs9
      TTsB2uxp2gnQZk/TToA2e5p2ArTZ07QToM2e5v8Bm4sRx2iNvGwAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Station Popularity' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top Stations' width='192'>
      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
      dkYG+hgbnaAghKiNhWhZ30ExnWfDpo4H80v/isEwTbJ5jUxeJZNXyeZVUrkiqUyBVLrAYirH
      /GKexXQeHUCRqYoGScTDJOJh6sIB6hSJOlmkThGJC4LtKug3KhQEBEUC2S6CLNq85OdtKki+
      uvTxcWK5n7j1DOCL/6kIBhEBsru7iAILE1c4fW6KVO8FHjYLLF6fproqTFGKk1u4hpUv0jul
      s3tzAxcuDbFzUzOJ9o08+9KLfO9vv0nt1m0oMvT0XGSwf4hEMoYpRBGMLPuf3O+8JUpaGv9r
      urTxUVLxLBndVqXxlM+QzeOXZhspvX3KqZ30zp/8zrR3P52kd1pZ9hM3O0opU0rR0XgUVcNe
      xBZ1ippeNtlIokAkpFAVDnglHg0Sj4ZoaaimOhqkpipEdTSIIt/dRpVlWqDp9s62bto727oB
      uomlGVBQbd6w23CoZZjl2hRBQJAc8U0SPTHOdkd02l0xz91sLBP9KBcD/SKju+FZKVpCSXZZ
      qd3fV1avqKxKBPI5u1dXhejvHeNxX/f2hx9hTp3n3LlL7Oho5kpvPyN6LX/0jWf48Td/Stfu
      p0lP9tDR1kB1TYyxkQn27NpCOJ5g3+P7gAKzV3pRWx9Gm81A5jJ+jzm1AAAaPElEQVRivBOA
      wYlZ/ubtc2WnU3aNrklsWV9J5vPr+t0+T2b0yYmuTOnnPbPdstSn5WlPbdsXN+WpnQLV1lxI
      hIMy8WjA024ospvu1E55GgrIhIJLU55+FBBEAYIKBJXVrJ5WhGVanumIY9XnmJT4RDqPOi8Y
      w/SJhJWFMt5cTpzET319VPKUt5fVy67i9iKQ6+wuqYvkCdPR3kAikSgTgYK1EQb7RtjQ2czs
      fIap61dATLJp906M9DSpdAbZ0rBCtezd08W5E8fRLImGtlaMfI7p61PUtXVipa5RvWEvAT1L
      bV3tHd+UNazhTrGCBZbFn/2n/5fxyxeZnM+zkM6zdc9e9u7Zyk++9zqnjp9CjDdyfbCH+uYa
      FtMCTe0tFAtFwkGJVCHM00/vRM0u0NDYwMN7t9O0rpOAaDJz8yZne0bY9/g+knKGb/3gFzy0
      dwctbS0k2zdTmL4KgXuxWF/DGlaPZUWg/tPHiTWtY2Romqde+czSFElikNHec0xOjDM8NEw2
      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
    </thumbnail>
  </thumbnails>
</workbook>
